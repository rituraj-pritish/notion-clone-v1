# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Cover {
  url: String!
}

input CreatePageInput {
  hierarchy: HierarchyInput
  icon: String
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Emoji {
  emoji: String!
  type: String!
}

type File {
  type: String!
  url: String!
}

input HierarchyInput {
  children: [ID!]
  parent: ID
  root: ID
}

union IconType = Emoji | File

type LastEdited {
  time: DateTime!
  user: User!
}

type Mutation {
  createPage(createPageInput: CreatePageInput!): Page!
  deletePage(id: String!): Page!
  signup(newUserInput: UserInput!): User!
  updatePage(updatePageInput: UpdatePageInput!): Page!
}

type Page {
  archived: Boolean!
  cover: Cover!
  createdAt: DateTime!
  favorite: Boolean!
  icon: IconType!
  id: ID!
  lastEdited: LastEdited!
  parent: Parent!
  properties: Properties!
  url: String!
}

type Parent {
  id: ID!
  type: ParentType!
}

enum ParentType {
  PAGE
  WORKSPACE
}

type Properties {
  title: String!
}

type Query {
  getPage(id: String!): Page!
  getPages(ids: String!): [Page!]!
  getWorkspace: WorkspaceReturn!
  logout: Boolean!
  signin(email: String!, password: String!): User!
}

input UpdatePageInput {
  children: [ID!]
  favorite: Boolean
  icon: String
  id: ID!
  name: String
  parent: ID
}

type User {
  createdAt: DateTime!
  currentWorkspace: ID!
  email: String!
  id: ID!
  name: String!
  updatedAt: DateTime!
  workspaces: [ID!]!
}

input UserInput {
  email: String!
  name: String!
  password: String!
}

type WorkspaceReturn {
  favorites: [Page!]!
  private: [Page!]!
}
